name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly security scans on Sunday

jobs:
  test:
    name: Test & Security Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Node.js setup for JavaScript testing
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    # Go setup for Go testing
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
        cache: true

    - name: Install JavaScript dependencies
      run: |
        npm ci
        
    - name: JavaScript Linting
      run: |
        npm run lint || echo "No lint script found"

    - name: JavaScript Tests
      run: |
        npm test || echo "No test script found"

    - name: Go Tests
      run: |
        go test ./... -v -race

    - name: Run e2e tests
      run: |
        npm run e2e || echo "No e2e tests configured"

    - name: Security scan
      uses: github/codeql-action/init@v2
      with:
        languages: javascript, go

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

    - name: Check for vulnerable dependencies
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      continue-on-error: true

  build:
    name: Build & Deploy
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
        cache: true

    - name: Install dependencies
      run: npm ci

    - name: Build JavaScript
      run: |
        npm run build

    - name: Build Go
      run: |
        go build -v ./...

    - name: Run final tests
      run: |
        npm test
        go test ./... -v

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*
          bin/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    name: Notifications
    needs: [test, build]
    runs-on: ubuntu-latest
    if: always()

    steps:
    - name: Notify on failure
      if: failure()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_COLOR: '#FF0000'
        SLACK_MESSAGE: 'Pipeline failed! Check the logs at https://github.com/goshva/snakeword/actions'